package jp.rhp.dataaccess.connection.recop;

import org.apache.ibatis.session.SqlSession;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.stereotype.Repository;

import jp.rhp.model.connection.RecopDatabaseConnectionRepository;
import jp.rhp.model.connection.recop.RecopDatabase;

@Repository("recopDatabaseConnectionRepository")
public class DatabaseConnectionRecopDataAccess implements recopDatabaseConnectionRepository
{
    @Autowired
    private SqlSessionFactoryBean sqlSessionFactoryBean;

    @Autowired
    private DataSourceTransactionManager dataSourceTransactionManager;

    private static SqlSessionTemplate sqlSessionTemplate;

  @Autowired
  private RecopDatabaseConnectionRepository RecopDatabaseConnectionRepository;

//  @Override
//  public RecopDatabase getRecopDatabaseContents()
//  {
//  	// recopDBの情報を取得
//  	RecopDatabase recopDatabase = sqlSession().selectOne( getClass().getName() + ".getRecopDbContents" );
//
//  	return recopDatabase;
//  }

  @Override
  public void connectRecopDatabase(RecopDatabase  database) throws Exception
  {
	  // TODO 処理をひとまとめにする場合は以下を復活、使わない場合は削除
  	// recopDBの情報を取得
//  	RecopDatabase recopDatabase = sqlSession().selectOne( getClass().getName() + ".getRecopDbContents" );
//    DataSource dataSource = recopDatabase.dataSource();

//  	// 取得情報を基にrecopDBに接続
//  	 DataSource dataSource = database.dataSource();
//      sqlSessionFactoryBean.setDataSource( dataSource );
//      sqlSessionFactoryBean.afterPropertiesSet();
//
//      sqlSessionTemplate = new SqlSessionTemplate( sqlSessionFactoryBean.getObject() );
//      dataSourceTransactionManager.setDataSource( dataSource );
//      dataSourceTransactionManager.afterPropertiesSet();
  }

//  public SqlSession  sqlSession()
//  {
//      SqlSession sqlSession = RecopDatabaseConnectionRepository.sqlSession();
//      return sqlSession;
//  }

  @Override
  public SqlSession sqlSession()
  {
      return sqlSessionTemplate;
  }
}

