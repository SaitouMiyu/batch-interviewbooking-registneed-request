package jp.rhp.dataaccess.interviewbookingregistneed.forjobofferposting;

import java.util.List;

import javax.sql.DataSource;

import org.apache.ibatis.session.SqlSession;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.stereotype.Repository;

import jp.rhp.model.connection.DatabaseConnectionRepository;
import jp.rhp.model.connection.recop.RecopDatabase;
import jp.rhp.model.interviewbookingregistneed.forjobofferposting.SendJobOfferPostingRepository;
import jp.rhp.model.interviewbookingregistneed.forjobofferposting.SendSectionToHire;
import jp.rhp.model.interviewbookingregistneed.forjobofferposting.SendSectionToHireList;

@Repository("sendJobOfferPostingRepository")
public class SendSectionToHireDataAccess implements SendJobOfferPostingRepository
{
    @Autowired
    private DatabaseConnectionRepository databaseConnectionRepository;

    // 以下3行recop接続処理
    @Autowired
    private SqlSessionFactoryBean sqlSessionFactoryBean;

    @Autowired
    private DataSourceTransactionManager dataSourceTransactionManager;

    private static SqlSessionTemplate sqlSessionTemplate;

//    @Override
//    public SendSectionToHireList list()
    @Override
    public SendSectionToHireList list() throws Exception
    {
    	// TODO 原因判明次第以降
      	RecopDatabase recopDatabase = sqlSession().selectOne( getClass().getName() + ".getRecopDbContents" );

      	DataSource dataSource = recopDatabase.dataSource();
        sqlSessionFactoryBean.setDataSource( dataSource );
        sqlSessionFactoryBean.afterPropertiesSet();

        sqlSessionTemplate = new SqlSessionTemplate( sqlSessionFactoryBean.getObject() );
        dataSourceTransactionManager.setDataSource( dataSource );
        dataSourceTransactionManager.afterPropertiesSet();

        // 以降send処理
      	List<SendSectionToHire> sectionHires = sqlSession().selectList( getClass().getName() + ".listOfJobOfferPosting" );
        return new SendSectionToHireList( sectionHires );
    }

    private SqlSession sqlSession()
    {
        SqlSession sqlSession = databaseConnectionRepository.sqlSession();
        return sqlSession;
    }
}
